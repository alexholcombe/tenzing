% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validate_infosheet.R
\name{validate_infosheet}
\alias{validate_infosheet}
\title{Validating the infosheet}
\usage{
validate_infosheet(infosheet)
}
\arguments{
\item{infosheet}{dataframe, filled out infosheet}
}
\value{
The function returns a list for each checked statement. Each list contains
  a \code{type} vector that stores whether the statement passed the check "success"
  or failed "warning" or "error", and a \code{message} vector that contains information
  about the nature of the check.
}
\description{
This function validates the infosheet provided to it by checking whether the
provided infosheet is compatible with the \code{\link{infosheet_template}}. The function
early escapes only if the provided infosheet is not a dataframe or the variable
names are not the same as in the infosheet tempalte.
}
\section{The function checks the following statements}{

\itemize{
  \item error, the provided infosheet is a dataframe
  \item error, the provided infosheet does not have the same column names as the template
  \item error, \code{Firstname} variable has missing value for one of the contributors
  \item error, \code{Surname} variable has a missing value for one of the contributors
  \item warning, the infosheet has duplicate names
  \item warning, the infosheet has names with duplicate initials
  \item error, the \code{'Order in publication'} variable has missing values
  \item error, the \code{'Order in publication'} variable has duplicate values
  \item error, both \code{'Primary affiliation'} and \code{'Secondary affiliation'} variables
    are missing for one contributor
  \item warning, there is no corresponding author added
  \item warning, email address is missing for the corresponding author
  \item warning, there is at least one CRediT role provided for all contributors
}
}

\examples{
check_result <- validate_infosheet(infosheet = infosheet_template)
# Show the results of the checks
purrr::map(check_result, "type")
# Show the corresponding messages
purrr::map(check_result, "message")
}
